apiVersion: v1
kind: ServiceAccount
metadata:
  name: honeycomb-serviceaccount
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: honeycomb-serviceaccount
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: honeycomb-serviceaccount
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: honeycomb-serviceaccount
subjects:
- kind: ServiceAccount
  name: honeycomb-serviceaccount
  namespace: default
---
apiVersion: v1
data:
  config.yaml: |-
    # By default, submit logs from interesting system pods such as the
    # kube API server
    watchers:
      - dataset: kubernetes-logs
        labelSelector: "k8s-app=kube-apiserver"
        namespace: kube-system
        parser: glog
      - dataset: kubernetes-logs
        labelSelector: "k8s-app=kube-scheduler"
        namespace: kube-system
        parser: glog
      - dataset: kubernetes-logs
        labelSelector: "k8s-app=kube-controller-manager"
        namespace: kube-system
        parser: glog
      - dataset: kubernetes-logs
        labelSelector: "k8s-app=kube-proxy"
        namespace: kube-system
        parser: glog
      - dataset: kubernetes-logs
        labelSelector: "k8s-app=dns-controller"
        namespace: kube-system
        parser: glog
    verbosity: info
kind: ConfigMap
metadata:
  name: honeycomb-agent-config
  namespace: default
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    k8s-app: honeycomb-agent
    kubernetes.io/cluster-service: "true"
    version: v1.1
  name: honeycomb-agent-v1.1
  namespace: default
spec:
  template:
    metadata:
      labels:
        k8s-app: honeycomb-agent
        kubernetes.io/cluster-service: "true"
        version: v1.1
    spec:
      containers:
      - env:
        - name: HONEYCOMB_WRITEKEY
          valueFrom:
            secretKeyRef:
              key: key
              name: honeycomb-writekey
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: honeycombio/honeycomb-kubernetes-agent:head
        imagePullPolicy: IfNotPresent
        name: honeycomb-agent
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - mountPath: /etc/honeycomb
          name: config
          readOnly: false
        - mountPath: /var/log
          name: varlog
          readOnly: false
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      serviceAccountName: honeycomb-serviceaccount
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: honeycomb-agent-config
        name: config
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
